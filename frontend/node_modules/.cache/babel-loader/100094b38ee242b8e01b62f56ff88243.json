{"ast":null,"code":"import _slicedToArray from\"C:/Users/Hemanth/Desktop/Vivokal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserEditScreens=function UserEditScreens(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[user,dispatch,history,userId,successUpdate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-dark my-3\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email Address\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreens;","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/screens/UserEditScreens.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreens","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails,updateUser } from '../actions/userActions'\r\nimport {USER_UPDATE_RESET} from '../constants/userConstants'\r\n\r\n\r\nconst UserEditScreens = ({match,history}) => {  \r\n     const userId=match.params.id\r\n     const [name,setName]= useState('')\r\n     const [email,setEmail]= useState('')\r\n     const [isAdmin,setIsAdmin]= useState(false)\r\n\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails = useSelector(state=> state.userDetails)\r\n     const {loading,error,user} = userDetails\r\n\r\n     const userUpdate = useSelector(state=> state.userUpdate)\r\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = userUpdate\r\n\r\n     useEffect(()=>{\r\n         if(successUpdate) {\r\n             dispatch({type:USER_UPDATE_RESET})\r\n             history.push('/admin/userlist')\r\n         } else{\r\n            if( ! user.name || user._id!==userId){\r\n                dispatch(getUserDetails(userId))\r\n            } else {  \r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n         }\r\n        \r\n     },[user,dispatch,history,userId,successUpdate])\r\n\r\n     const submitHandler= (e)=>{\r\n         e.preventDefault()\r\n         dispatch(updateUser({_id:userId,name,email,isAdmin}))\r\n     }\r\n\r\n    return(\r\n            <> \r\n               <Link to='/admin/userlist' className='btn btn-dark my-3'>\r\n                   Go Back\r\n               </Link>\r\n               <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n           {loading ? <Loader /> : error? <Message variant='danger'>{error}</Message> :(\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                <Form.Group controlId='isadmin'>\r\n                    <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e)=> setIsAdmin(e.target.checked)}>\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                 <br />\r\n               \r\n                <Button  type='submit' variant='primary'>\r\n                  Update\r\n                </Button>\r\n            </Form>\r\n           )}\r\n           \r\n            \r\n        </FormContainer>\r\n            </>\r\n\r\n        \r\n    )   \r\n} \r\n\r\nexport default UserEditScreens\r\n"]},"metadata":{},"sourceType":"module"}