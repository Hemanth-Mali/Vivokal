{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.item !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;AAEA,OAAO,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAsBC,MAAtB,KAA+B;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAACF,MAAM,CAACG,OAAlB;AAEA,YAAMC,SAAS,GAAEN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAYL,IAAI,CAACK,OAA5C,CAAjB;;AAEA,UAAGH,SAAH,EACA;AACI,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC/BA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAA+BL,IAA/B,GAAoCI,CADzB;AAFR,SAAP;AAMH,OARD,MAQK;AACD,eAAM,EACF,GAAGR,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAFR,SAAN;AAIH;;AACD,SAAKN,gBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAKA,CAAC,CAACJ,IAAF,KAAUF,MAAM,CAACG,OAA7C;AAFR,OAAP;;AAIJ;AACI,aAAOL,KAAP;AA1BZ;AA8BH,CA/BM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants'\r\n\r\nexport const cartReducer= (state={cartItems:[]},action)=>{\r\n    switch (action.type){\r\n        case CART_ADD_ITEM:\r\n            const item=action.payload\r\n\r\n            const existItem= state.cartItems.find((x)=> x.product===item.product)\r\n\r\n            if(existItem)\r\n            {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                    x.product===existItem.product? item:x\r\n                    ),\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,item],\r\n                }\r\n            }\r\n            case CART_REMOVE_ITEM:\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.filter((x)=>x.item!== action.payload),\r\n                }\r\n            default:\r\n                return state \r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}