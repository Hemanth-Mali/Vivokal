{"ast":null,"code":"import { FOOD_CREATE_FAIL, FOOD_CREATE_REQUEST, FOOD_CREATE_REVIEW_FAIL, FOOD_CREATE_REVIEW_REQUEST, FOOD_CREATE_REVIEW_SUCCESS, FOOD_CREATE_SUCCESS, FOOD_DELETE_FAIL, FOOD_DELETE_REQUEST, FOOD_DELETE_SUCCESS, FOOD_DETAILS_FAIL, FOOD_DETAILS_REQUEST, FOOD_DETAILS_SUCCESS, FOOD_LIST_FAIL, FOOD_LIST_REQUEST, FOOD_LIST_SUCCESS, FOOD_UPDATE_FAIL, FOOD_UPDATE_REQUEST, FOOD_UPDATE_SUCCESS } from '../constants/foodConstants';\nimport axios from 'axios';\nexport const listFoods = (pageNumber = '') => async dispatch => {\n  try {\n    dispatch({\n      type: FOOD_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/foods?pageNumber=${pageNumber}`);\n    dispatch({\n      type: FOOD_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FOOD_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listFoodDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: FOOD_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/foods/${id}`);\n    dispatch({\n      type: FOOD_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FOOD_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteFood = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FOOD_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/foods/${id}`, config);\n    dispatch({\n      type: FOOD_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: FOOD_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createFood = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FOOD_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/foods`, {}, config);\n    dispatch({\n      type: FOOD_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FOOD_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateFood = food => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FOOD_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/foods/${food._id}`, food, config);\n    dispatch({\n      type: FOOD_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FOOD_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createFoodReview = (foodId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FOOD_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/foods/${foodId}/reviews`, review, config);\n    dispatch({\n      type: FOOD_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: FOOD_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/actions/foodActions.js"],"names":["FOOD_CREATE_FAIL","FOOD_CREATE_REQUEST","FOOD_CREATE_REVIEW_FAIL","FOOD_CREATE_REVIEW_REQUEST","FOOD_CREATE_REVIEW_SUCCESS","FOOD_CREATE_SUCCESS","FOOD_DELETE_FAIL","FOOD_DELETE_REQUEST","FOOD_DELETE_SUCCESS","FOOD_DETAILS_FAIL","FOOD_DETAILS_REQUEST","FOOD_DETAILS_SUCCESS","FOOD_LIST_FAIL","FOOD_LIST_REQUEST","FOOD_LIST_SUCCESS","FOOD_UPDATE_FAIL","FOOD_UPDATE_REQUEST","FOOD_UPDATE_SUCCESS","axios","listFoods","pageNumber","dispatch","type","data","get","payload","error","response","message","listFoodDetails","id","deleteFood","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createFood","post","updateFood","food","put","_id","createFoodReview","foodId","review"],"mappings":"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","sourcesContent":["import { FOOD_CREATE_FAIL, FOOD_CREATE_REQUEST, FOOD_CREATE_REVIEW_FAIL, FOOD_CREATE_REVIEW_REQUEST, FOOD_CREATE_REVIEW_SUCCESS, FOOD_CREATE_SUCCESS, FOOD_DELETE_FAIL, FOOD_DELETE_REQUEST, FOOD_DELETE_SUCCESS, FOOD_DETAILS_FAIL, FOOD_DETAILS_REQUEST, FOOD_DETAILS_SUCCESS, FOOD_LIST_FAIL, FOOD_LIST_REQUEST, FOOD_LIST_SUCCESS, FOOD_UPDATE_FAIL, FOOD_UPDATE_REQUEST, FOOD_UPDATE_SUCCESS } from '../constants/foodConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listFoods= (pageNumber='') => async(dispatch) =>{\r\n    try{\r\n        dispatch({type:FOOD_LIST_REQUEST})\r\n        const {data}= await axios.get(`/api/foods?pageNumber=${pageNumber}`)\r\n        dispatch({type:FOOD_LIST_SUCCESS,\r\n        payload:data,\r\n        })\r\n} catch(error){\r\n    dispatch({type:FOOD_LIST_FAIL,\r\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const listFoodDetails= (id) => async(dispatch) =>{\r\n    try{\r\n        dispatch({type:FOOD_DETAILS_REQUEST})\r\n        const {data}= await axios.get(`/api/foods/${id}`)\r\n        dispatch({type:FOOD_DETAILS_SUCCESS,\r\n        payload:data,\r\n        })\r\n} catch(error){\r\n    dispatch({type:FOOD_DETAILS_FAIL,\r\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const deleteFood = (id) => async(dispatch,getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: FOOD_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo},} = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization : `Bearer ${userInfo.token}`, \r\n            },\r\n        }\r\n\r\n         await axios.delete(`/api/foods/${id}`,config)\r\n \r\n        dispatch({\r\n            type:FOOD_DELETE_SUCCESS,\r\n            \r\n        })  \r\n\r\n    } catch(error){\r\n        dispatch({type:FOOD_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n           })\r\n    }\r\n    }   \r\n    \r\n    export const createFood = () => async(dispatch,getState) =>{\r\n        try{\r\n            dispatch({\r\n                type: FOOD_CREATE_REQUEST,\r\n            })\r\n    \r\n            const { userLogin: {userInfo},} = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    Authorization : `Bearer ${userInfo.token}`, \r\n                },\r\n            }\r\n    \r\n            const {data}= await axios.post(`/api/foods`,{},config)\r\n     \r\n            dispatch({\r\n                type:FOOD_CREATE_SUCCESS,\r\n                payload:data \r\n                \r\n            })  \r\n    \r\n        } catch(error){\r\n            dispatch({type:FOOD_CREATE_FAIL,\r\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n               })\r\n        }\r\n        }    \r\n\r\n        export const updateFood = (food) => async(dispatch,getState) =>{\r\n            try{\r\n                dispatch({\r\n                    type: FOOD_UPDATE_REQUEST,\r\n                })\r\n        \r\n                const { userLogin: {userInfo},} = getState()\r\n        \r\n                const config = {\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        Authorization : `Bearer ${userInfo.token}`, \r\n                    },\r\n                }\r\n        \r\n                const {data}= await axios.put(`/api/foods/${food._id}`,food,config)\r\n         \r\n                dispatch({\r\n                    type:FOOD_UPDATE_SUCCESS,\r\n                    payload:data \r\n                    \r\n                })  \r\n        \r\n            } catch(error){\r\n                dispatch({type:FOOD_UPDATE_FAIL,\r\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                   })\r\n            }\r\n            }   \r\n            \r\n            export const createFoodReview = (foodId,review) => async(dispatch,getState) =>{\r\n                try{\r\n                    dispatch({\r\n                        type: FOOD_CREATE_REVIEW_REQUEST,\r\n                    })\r\n            \r\n                    const { userLogin: {userInfo},} = getState()\r\n            \r\n                    const config = {\r\n                        headers:{\r\n                            'Content-Type':'application/json',\r\n                            Authorization : `Bearer ${userInfo.token}`, \r\n                        },\r\n                    }\r\n            \r\n                 await axios.post(`/api/foods/${foodId}/reviews`,review,config)\r\n             \r\n                    dispatch({\r\n                        type:FOOD_CREATE_REVIEW_SUCCESS,\r\n                        \r\n                    })  \r\n            \r\n                } catch(error){\r\n                    dispatch({type:FOOD_CREATE_REVIEW_FAIL,\r\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                       })\r\n                }\r\n                }  "]},"metadata":{},"sourceType":"module"}