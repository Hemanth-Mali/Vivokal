{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanth\\\\Desktop\\\\Vivokal\\\\frontend\\\\src\\\\screens\\\\FoodsScreens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport Food from '../components/Food';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport FoodPaginate from '../components/FoodPaginate';\nimport { listFoods } from '../actions/foodActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FoodsScreens = ({\n  match\n}) => {\n  _s();\n\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n  const foodList = useSelector(state => state.foodList);\n  const {\n    loading,\n    error,\n    foods,\n    page,\n    pages\n  } = foodList;\n  useEffect(() => {\n    dispatch(listFoods(pageNumber));\n  }, [dispatch, pageNumber]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Promoting Associated Local Foods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Opting local Food means healthier and more tasty food options.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: \"Foods\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: foods.map(food => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Food, {\n            food: food\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 26\n          }, this)\n        }, food._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FoodPaginate, {\n        pages: pages,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(FoodsScreens, \"q8s0awIhIjvTzuxBXBjJsT8uOQc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FoodsScreens;\nexport default FoodsScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsScreens\");","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/screens/FoodsScreens.js"],"names":["React","useEffect","useDispatch","useSelector","Row","Col","Food","Message","Loader","Meta","FoodPaginate","listFoods","FoodsScreens","match","pageNumber","params","dispatch","foodList","state","loading","error","foods","page","pages","map","food","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC9B,QAAMC,UAAU,GAACD,KAAK,CAACE,MAAN,CAAaD,UAAb,IAA2B,CAA5C;AACA,QAAME,QAAQ,GAAEd,WAAW,EAA3B;AACA,QAAMe,QAAQ,GAACd,WAAW,CAACe,KAAK,IAAEA,KAAK,CAACD,QAAd,CAA1B;AACA,QAAM;AAACE,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA,KAAf;AAAqBC,IAAAA,IAArB;AAA0BC,IAAAA;AAA1B,MAAkCN,QAAxC;AAEAhB,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,QAAQ,CAACL,SAAS,CAACG,UAAD,CAAV,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,EAAUF,UAAV,CAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKK,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgBC,KAAK,gBAAE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAF,gBAC1B;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADA,eAEC,QAAC,GAAD;AAAA,kBACEC,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACX,QAAC,GAAD;AAAoB,UAAA,EAAE,EAAE,EAAxB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,EAAE,EAAE,CAA9C;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,gBADH;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,eASH,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEH,KAArB;AAA4B,QAAA,IAAI,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,cATG;AAAA,oBAJP;AAAA,kBADJ;AAmBH,CA5BD;;GAAMV,Y;UAEcV,W,EACDC,W;;;KAHbS,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col} from 'react-bootstrap'\r\nimport Food from '../components/Food'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport FoodPaginate from '../components/FoodPaginate'\r\nimport {listFoods} from '../actions/foodActions'\r\n\r\nconst FoodsScreens = ({match}) => {\r\n    const pageNumber=match.params.pageNumber || 1\r\n    const dispatch= useDispatch()\r\n    const foodList=useSelector(state=>state.foodList)\r\n    const {loading,error,foods,page,pages}= foodList\r\n\r\n    useEffect(()=>{\r\n        dispatch(listFoods(pageNumber))\r\n    }, [dispatch,pageNumber])\r\n    return (\r\n        <>\r\n            <h1>Promoting Associated Local Foods</h1>\r\n            <h4>Opting local Food means healthier and more tasty food options.</h4>\r\n            {loading? (<Loader />): error?(<Message variant='danger'>{error}</Message>):(\r\n               <>\r\n               <Meta title='Foods' />\r\n                <Row>\r\n                 {foods.map(food =>(\r\n                     <Col key={food._id} sm={12} md={6} lg={4} xl={3}>\r\n                         <Food food={food} />\r\n                     </Col>\r\n                 ))}\r\n            </Row>\r\n            <FoodPaginate pages={pages} page={page} />\r\n            </>\r\n            )}      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default FoodsScreens"]},"metadata":{},"sourceType":"module"}