{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS,USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL} from '../constants/userConstants'\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nexport const login = (email,password) => async(dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            },\r\n        }\r\n\r\n        const {data}= await axios.post('/api/users/login',{email,password},config)\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    } catch(error){\r\n        dispatch({type:USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n           })\r\n    }\r\n    }\r\n\r\n    export const logout = () => (dispatch) =>{\r\n        localStorage.removeItem('userInfo')\r\n        dispatch({\r\n            type:USER_LOGOUT\r\n        })\r\n        dispatch({type:USER_DETAILS_RESET})\r\n        dispatch({type:ORDER_LIST_MY_RESET})\r\n    }\r\n\r\n    export const register = (name,email,password) => async(dispatch) =>{\r\n        try{\r\n            dispatch({\r\n                type: USER_REGISTER_REQUEST,\r\n            })\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                },\r\n            }\r\n    \r\n            const {data}= await axios.post('/api/users',{name,email,password},config)\r\n    \r\n            dispatch({\r\n                type:USER_REGISTER_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n            dispatch({\r\n                type:USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n    \r\n            localStorage.setItem('userInfo',JSON.stringify(data))\r\n    \r\n        } catch(error){\r\n            dispatch({type:USER_REGISTER_FAIL,\r\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n               })\r\n        }\r\n        }  \r\n\r\n\r\n        export const getUserDetails = (id) => async(dispatch,getState) =>{\r\n            try{\r\n                dispatch({\r\n                    type: USER_DETAILS_REQUEST,\r\n                })\r\n\r\n                const { userLogin: {userInfo}} = getState()\r\n        \r\n                const config = {\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        Authorization : `Bearer ${userInfo.token}`\r\n                    },\r\n                }\r\n        \r\n                const {data}= await axios.get(`/api/users/${id}`,config)\r\n        \r\n                dispatch({\r\n                    type:USER_DETAILS_SUCCESS,\r\n                    payload: data\r\n                })  \r\n            } catch(error){\r\n                dispatch({type:USER_DETAILS_FAIL,\r\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                   })\r\n            }\r\n            } \r\n            \r\n            export const updateUserProfile = (user) => async(dispatch,getState) =>{\r\n                try{\r\n                    dispatch({\r\n                        type: USER_UPDATE_PROFILE_REQUEST,\r\n                    })\r\n    \r\n                    const { userLogin: {userInfo}} = getState()\r\n            \r\n                    const config = {\r\n                        headers:{\r\n                            'Content-Type':'application/json',\r\n                            Authorization : `Bearer ${userInfo.token}`\r\n                        },\r\n                    }\r\n            \r\n                    const {data}= await axios.put(`/api/users/profile`,user,config)\r\n             \r\n                    dispatch({\r\n                        type:USER_UPDATE_PROFILE_SUCCESS,\r\n                        payload: data\r\n                    })  \r\n                    \r\n                    dispatch({ \r\n                        type:USER_LOGIN_SUCCESS,\r\n                        payload: data\r\n                    }) \r\n                    \r\n                   localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n                } catch(error){\r\n                    dispatch({type:USER_UPDATE_PROFILE_FAIL,\r\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                       })\r\n                }\r\n                } \r\n\r\n                export const listUsers = () => async(dispatch,getState) =>{\r\n                    try{\r\n                        dispatch({\r\n                            type: USER_LIST_REQUEST,\r\n                        })\r\n        \r\n                        const { userLogin: {userInfo}} = getState()\r\n                \r\n                        const config = {\r\n                            headers:{\r\n                                Authorization : `Bearer ${userInfo.token}`\r\n                            },\r\n                        }\r\n                \r\n                        const {data}= await axios.get(`/api/users`,config)\r\n                 \r\n                        dispatch({\r\n                            type:USER_LIST_SUCCESS,\r\n                            payload: data,\r\n                        })  \r\n    \r\n                    } catch(error){\r\n                        dispatch({type:USER_LIST_FAIL,\r\n                            payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                           })\r\n                    }\r\n                    } "]},"metadata":{},"sourceType":"module"}