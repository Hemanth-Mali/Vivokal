{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanth\\\\Desktop\\\\Vivokal\\\\frontend\\\\src\\\\screens\\\\HelpersScreens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport Helper from '../components/Helper';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport HelperPaginate from '../components/HelperPaginate';\nimport { listHelpers } from '../actions/helperActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HelpersScreens = ({\n  match\n}) => {\n  _s();\n\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n  const helperList = useSelector(state => state.helperList);\n  const {\n    loading,\n    error,\n    helpers,\n    page,\n    pages\n  } = helperList;\n  useEffect(() => {\n    dispatch(listHelpers(pageNumber));\n  }, [dispatch, pageNumber]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Our Associated FreeLancers and Part-Timers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Opting local delivers the best customer service.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: helpers.map(helper => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Helper, {\n            helper: helper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 26\n          }, this)\n        }, helper._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HelperPaginate, {\n        pages: pages,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(HelpersScreens, \"RXTUge5UH4M9VH6GcodPkP4fKGQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HelpersScreens;\nexport default HelpersScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"HelpersScreens\");","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/screens/HelpersScreens.js"],"names":["React","useEffect","useDispatch","useSelector","Row","Col","Helper","Message","Loader","HelperPaginate","listHelpers","HelpersScreens","match","pageNumber","params","dispatch","helperList","state","loading","error","helpers","page","pages","map","helper","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAAQC,WAAR,QAA0B,0BAA1B;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAChC,QAAMC,UAAU,GAACD,KAAK,CAACE,MAAN,CAAaD,UAAb,IAA2B,CAA5C;AACA,QAAME,QAAQ,GAAEb,WAAW,EAA3B;AACA,QAAMc,UAAU,GAACb,WAAW,CAACc,KAAK,IAAEA,KAAK,CAACD,UAAd,CAA5B;AACA,QAAM;AAACE,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA,OAAf;AAAuBC,IAAAA,IAAvB;AAA4BC,IAAAA;AAA5B,MAAoCN,UAA1C;AAEAf,EAAAA,SAAS,CAAC,MAAI;AACVc,IAAAA,QAAQ,CAACL,WAAW,CAACG,UAAD,CAAZ,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,EAAUF,UAAV,CAFM,CAAT;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKK,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgBC,KAAK,gBAAE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAF,gBAC1B;AAAA,8BACC,QAAC,GAAD;AAAA,kBACEC,OAAO,CAACG,GAAR,CAAYC,MAAM,iBACf,QAAC,GAAD;AAAsB,UAAA,EAAE,EAAE,EAA1B;AAA8B,UAAA,EAAE,EAAE,CAAlC;AAAqC,UAAA,EAAE,EAAE,CAAzC;AAA4C,UAAA,EAAE,EAAE,CAAhD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,MAAM,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADH;AADF;AAAA;AAAA;AAAA;AAAA,cADD,eAQH,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEH,KAAvB;AAA8B,QAAA,IAAI,EAAED;AAApC;AAAA;AAAA;AAAA;AAAA,cARG;AAAA,oBAJP;AAAA,kBADJ;AAkBH,CA3BD;;GAAMV,c;UAEcT,W,EACCC,W;;;KAHfQ,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col} from 'react-bootstrap'\r\nimport Helper from '../components/Helper'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport HelperPaginate from '../components/HelperPaginate'\r\nimport {listHelpers} from '../actions/helperActions'\r\n\r\nconst HelpersScreens = ({match}) => {\r\n    const pageNumber=match.params.pageNumber || 1\r\n    const dispatch= useDispatch()\r\n    const helperList=useSelector(state=>state.helperList)\r\n    const {loading,error,helpers,page,pages}= helperList\r\n\r\n    useEffect(()=>{\r\n        dispatch(listHelpers(pageNumber))\r\n    }, [dispatch,pageNumber])\r\n    return (\r\n        <>\r\n            <h1> Our Associated FreeLancers and Part-Timers</h1>\r\n            <h4>Opting local delivers the best customer service.</h4>\r\n            {loading? (<Loader />): error?(<Message variant='danger'>{error}</Message>):(\r\n               <>\r\n                <Row>\r\n                 {helpers.map(helper =>(\r\n                     <Col key={helper._id} sm={12} md={6} lg={4} xl={3}>\r\n                         <Helper helper={helper} />\r\n                     </Col>\r\n                 ))}\r\n            </Row>\r\n            <HelperPaginate pages={pages} page={page} />\r\n            </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HelpersScreens"]},"metadata":{},"sourceType":"module"}