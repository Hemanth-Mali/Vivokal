{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\nexport const listProducts = (keyword = '', pageNumber = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listSellerDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}/seller`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/top`);\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","axios","listProducts","keyword","pageNumber","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","listSellerDetails","deleteProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createProduct","post","updateProduct","product","put","_id","createProductReview","productId","review","listTopProducts"],"mappings":"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","sourcesContent":["import {PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_FAIL,PRODUCT_CREATE_SUCCESS,PRODUCT_UPDATE_FAIL,PRODUCT_UPDATE_SUCCESS,PRODUCT_UPDATE_REQUEST, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL} from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts= (keyword='',pageNumber='') => async(dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n        const {data}= await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({type:PRODUCT_LIST_SUCCESS,\r\n        payload:data,\r\n        })\r\n} catch(error){\r\n    dispatch({type:PRODUCT_LIST_FAIL,\r\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const listProductDetails= (id) => async(dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n        const {data}= await axios.get(`/api/products/${id}`)\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,\r\n        payload:data,\r\n        })\r\n} catch(error){\r\n    dispatch({type:PRODUCT_DETAILS_FAIL,\r\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const listSellerDetails= (id) => async(dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n        const {data}= await axios.get(`/api/products/${id}/seller`)\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,\r\n        payload:data,\r\n        })\r\n} catch(error){\r\n    dispatch({type:PRODUCT_DETAILS_FAIL,\r\n     payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n    })\r\n}\r\n}\r\n\r\nexport const deleteProduct = (id) => async(dispatch,getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo},} = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization : `Bearer ${userInfo.token}`, \r\n            },\r\n        }\r\n\r\n         await axios.delete(`/api/products/${id}`,config)\r\n \r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS,\r\n            \r\n        })  \r\n\r\n    } catch(error){\r\n        dispatch({type:PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n           })\r\n    }\r\n    }   \r\n    \r\n    export const createProduct = () => async(dispatch,getState) =>{\r\n        try{\r\n            dispatch({\r\n                type: PRODUCT_CREATE_REQUEST,\r\n            })\r\n    \r\n            const { userLogin: {userInfo},} = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    Authorization : `Bearer ${userInfo.token}`, \r\n                },\r\n            }\r\n    \r\n            const {data}= await axios.post(`/api/products`,{},config)\r\n     \r\n            dispatch({\r\n                type:PRODUCT_CREATE_SUCCESS,\r\n                payload:data \r\n                \r\n            })  \r\n    \r\n        } catch(error){\r\n            dispatch({type:PRODUCT_CREATE_FAIL,\r\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n               })\r\n        }\r\n        }    \r\n\r\n        export const updateProduct = (product) => async(dispatch,getState) =>{\r\n            try{\r\n                dispatch({\r\n                    type: PRODUCT_UPDATE_REQUEST,\r\n                })\r\n        \r\n                const { userLogin: {userInfo},} = getState()\r\n        \r\n                const config = {\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        Authorization : `Bearer ${userInfo.token}`, \r\n                    },\r\n                }\r\n        \r\n                const {data}= await axios.put(`/api/products/${product._id}`,product,config)\r\n         \r\n                dispatch({\r\n                    type:PRODUCT_UPDATE_SUCCESS,\r\n                    payload:data \r\n                    \r\n                })  \r\n        \r\n            } catch(error){\r\n                dispatch({type:PRODUCT_UPDATE_FAIL,\r\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                   })\r\n            }\r\n            }  \r\n            \r\n            export const createProductReview = (productId,review) => async(dispatch,getState) =>{\r\n                try{\r\n                    dispatch({\r\n                        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n                    })\r\n            \r\n                    const { userLogin: {userInfo},} = getState()\r\n            \r\n                    const config = {\r\n                        headers:{\r\n                            'Content-Type':'application/json',\r\n                            Authorization : `Bearer ${userInfo.token}`, \r\n                        },\r\n                    }\r\n            \r\n                 await axios.post(`/api/products/${productId}/reviews`,review,config)\r\n             \r\n                    dispatch({\r\n                        type:PRODUCT_CREATE_REVIEW_SUCCESS,\r\n                        \r\n                    })  \r\n            \r\n                } catch(error){\r\n                    dispatch({type:PRODUCT_CREATE_REVIEW_FAIL,\r\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                       })\r\n                }\r\n                }  \r\n\r\n                export const listTopProducts= () => async(dispatch) =>{\r\n                    try{\r\n                        dispatch({type:PRODUCT_TOP_REQUEST})\r\n                        const {data}= await axios.get(`/api/products/top`)\r\n                        dispatch({type:PRODUCT_TOP_SUCCESS,\r\n                        payload:data,\r\n                        })\r\n                } catch(error){\r\n                    dispatch({type:PRODUCT_TOP_FAIL,\r\n                     payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                    })\r\n                }\r\n                }\r\n                "]},"metadata":{},"sourceType":"module"}