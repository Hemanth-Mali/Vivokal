{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanth\\\\Desktop\\\\Vivokal\\\\frontend\\\\src\\\\screens\\\\ProfileScreens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { listMyOrders } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreens = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this), loadingOrders ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this) : errorOrders ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 60\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.At.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 36\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ProfileScreens, \"vnlYL4q8AhJf7qfM0Xih7clCXWU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreens;\nexport default ProfileScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreens\");","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/screens/ProfileScreens.js"],"names":["React","useState","useEffect","LinkContainer","Form","Button","Row","Col","Table","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","listMyOrders","ProfileScreens","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","type","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","deliveredAt","color","isDelivered","At"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Form,Button,Row,Col,Table} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\nimport {listMyOrders} from '../actions/orderActions'\r\n\r\n\r\nconst ProfileScreens = ({location,history}) => {  \r\n\r\n     const [name,setName]= useState('')\r\n     const [email,setEmail]= useState('')\r\n     const [password,setPassword]= useState('')\r\n     const [confirmPassword,setConfirmPassword]= useState('')\r\n     const [message,setMessage]= useState('')\r\n\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails = useSelector(state=> state.userDetails)\r\n     const {loading,error,user} = userDetails\r\n\r\n     const userLogin = useSelector(state=> state.userLogin)\r\n     const {userInfo} = userLogin\r\n\r\n     const userUpdateProfile = useSelector(state=> state.userUpdateProfile)\r\n     const {success} = userUpdateProfile\r\n\r\n     const orderListMy = useSelector(state=> state.orderListMy)\r\n     const {loading:loadingOrders,error:errorOrders,orders} = orderListMy\r\n\r\n\r\n     useEffect(()=>{\r\n         if(!userInfo){\r\n             history.push('/login')\r\n         } else{\r\n             if(!user.name || success){\r\n                 dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                 dispatch(getUserDetails('profile'))\r\n                 dispatch(listMyOrders())\r\n             } else{\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n             }\r\n         }\r\n     },[dispatch,history,userInfo,user,success])\r\n\r\n     const submitHandler= (e)=>{\r\n         e.preventDefault()\r\n         if(password!==confirmPassword){\r\n             setMessage('Passwords do not match')\r\n         } else{\r\n             dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n         }  \r\n     }\r\n\r\n    return(\r\n       <Row>\r\n           <Col md={3} className='align-items-center'>\r\n           <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                 <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e)=> setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br /> \r\n                <Button  type='submit' variant='primary'>\r\n                  Update \r\n                </Button>\r\n            </Form>\r\n           </Col>\r\n           <Col md={9}>\r\n               <h2>My Orders</h2>\r\n               {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>\r\n               {errorOrders}</Message>: (\r\n                   <Table striped bordered hover responsive className='table-sm'>\r\n                       <thead>\r\n                           <tr>\r\n                               <th>ID</th>\r\n                               <th>DATE</th>\r\n                               <th>TOTAL</th>\r\n                               <th>PAID</th>\r\n                               <th>DELIVERED</th>\r\n                               <th></th>    \r\n                           </tr>\r\n                       </thead>\r\n                       <tbody>\r\n                           {orders.map(order =>(\r\n                               <tr key={order._id}>\r\n                                  <td>{order._id}</td>\r\n                                  <td>{order.createdAt.substring(0,10)}</td>\r\n                                  <td>{order.totalPrice}</td>\r\n                                  <td>{order.isPaid? order.deliveredAt.substring(0,10): (\r\n                                      <i className= 'fas fa-times' style={{color:'red'}}></i>\r\n                                  )}</td>\r\n                                  <td>{order.isDelivered? order.At.substring(0,10): (\r\n                                      <i className= 'fas fa-times' style={{color:'red'}}></i>\r\n                                  )}</td>\r\n                                   <td>\r\n                                       <LinkContainer to={`/order/${order._id}`}>\r\n                                           <Button variant='light'>Details</Button>\r\n                                       </LinkContainer>\r\n                                   </td>\r\n                                  \r\n                               </tr>\r\n                           ))}\r\n                       </tbody>\r\n                   </Table>\r\n               )}\r\n           </Col>\r\n       </Row>\r\n    )   \r\n} \r\n\r\nexport default ProfileScreens\r\n"]},"metadata":{},"sourceType":"module"}