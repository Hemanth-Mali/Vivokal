{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders","deliverOrder"],"mappings":"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","sourcesContent":["import {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const createOrder = (order) => async(dispatch,getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo},} = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`, \r\n            },\r\n        }\r\n\r\n        const {data}= await axios.post(`/api/orders`,order,config)\r\n \r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })  \r\n\r\n    } catch(error){\r\n        dispatch({type:ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n           })\r\n    }\r\n    } \r\n\r\n    export const getOrderDetails = (id) => async(dispatch,getState) =>{\r\n        try{\r\n            dispatch({\r\n                type: ORDER_DETAILS_REQUEST,\r\n            })\r\n    \r\n            const { userLogin: {userInfo},} = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    Authorization : `Bearer ${userInfo.token}`, \r\n                },\r\n            }\r\n    \r\n            const {data}= await axios.get(`/api/orders/${id}`,config)\r\n     \r\n            dispatch({\r\n                type:ORDER_DETAILS_SUCCESS,\r\n                payload: data\r\n            })  \r\n    \r\n        } catch(error){\r\n            dispatch({type:ORDER_DETAILS_FAIL,\r\n                payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n               })\r\n        }\r\n        }    \r\n\r\n\r\n        export const payOrder = (orderId,paymentResult) => async(dispatch,getState) =>{\r\n            try{\r\n                dispatch({\r\n                    type: ORDER_PAY_REQUEST,\r\n                })\r\n        \r\n                const { userLogin: {userInfo},} = getState()\r\n        \r\n                const config = {\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        Authorization : `Bearer ${userInfo.token}`, \r\n                    },\r\n                }\r\n        \r\n                const {data}= await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\r\n         \r\n                dispatch({\r\n                    type:ORDER_PAY_SUCCESS,\r\n                    payload: data\r\n                })  \r\n        \r\n            } catch(error){\r\n                dispatch({type:ORDER_PAY_FAIL,\r\n                    payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                   })\r\n            }\r\n            }    \r\n\r\n            export const listMyOrders = () => async(dispatch,getState) =>{\r\n                try{\r\n                    dispatch({\r\n                        type: ORDER_LIST_MY_REQUEST,\r\n                    })\r\n            \r\n                    const { userLogin: {userInfo},} = getState()\r\n            \r\n                    const config = {\r\n                        headers:{\r\n                            Authorization : `Bearer ${userInfo.token}`, \r\n                        },\r\n                    }\r\n            \r\n                    const {data}= await axios.get(`/api/orders/myorders`,config)\r\n             \r\n                    dispatch({\r\n                        type:ORDER_LIST_MY_SUCCESS,\r\n                        payload: data\r\n                    })  \r\n            \r\n                } catch(error){\r\n                    dispatch({type:ORDER_LIST_MY_FAIL,\r\n                        payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                       })\r\n                }\r\n                }    \r\n\r\n                export const listOrders = () => async(dispatch,getState) =>{\r\n                    try{\r\n                        dispatch({\r\n                            type: ORDER_LIST_REQUEST,\r\n                        })\r\n                \r\n                        const { userLogin: {userInfo},} = getState()\r\n                \r\n                        const config = {\r\n                            headers:{\r\n                                Authorization : `Bearer ${userInfo.token}`, \r\n                            },\r\n                        }\r\n                \r\n                        const {data}= await axios.get(`/api/orders`,config)\r\n                 \r\n                        dispatch({\r\n                            type:ORDER_LIST_SUCCESS,\r\n                            payload: data\r\n                        })  \r\n                \r\n                    } catch(error){\r\n                        dispatch({type:ORDER_LIST_FAIL,\r\n                            payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                           })\r\n                    }\r\n                    }      \r\n                    \r\n                    export const deliverOrder = (order) => async(dispatch,getState) =>{\r\n                        try{\r\n                            dispatch({\r\n                                type: ORDER_DELIVER_REQUEST,\r\n                            })\r\n                    \r\n                            const { userLogin: {userInfo},} = getState()\r\n                    \r\n                            const config = {\r\n                                headers:{\r\n                                    Authorization : `Bearer ${userInfo.token}`, \r\n                                },\r\n                            }\r\n                    \r\n                            const {data}= await axios.put(`/api/orders/${orderId}/deliver`,{},config)\r\n                     \r\n                            dispatch({\r\n                                type:ORDER_DELIVER_SUCCESS,\r\n                                payload: data\r\n                            })  \r\n                    \r\n                        } catch(error){\r\n                            dispatch({type:ORDER_DELIVER_FAIL,\r\n                                payload: error.response && error.response.data.message?error.response.data.message:error.message,\r\n                               })\r\n                        }\r\n                        }            "]},"metadata":{},"sourceType":"module"}