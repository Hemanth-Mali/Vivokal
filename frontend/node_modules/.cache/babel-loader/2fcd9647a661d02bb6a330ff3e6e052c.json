{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanth\\\\Desktop\\\\Vivokal\\\\frontend\\\\src\\\\screens\\\\ProductEditScreens.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreens = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [image, setImage] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [sellerName, setSellerName] = useState('');\n  const [sellerImage, setSellerImage] = useState('');\n  const [sellerDescription, setSellerDescription] = useState('');\n  const [sellerAddress, setSellerAddress] = useState('');\n  const [sellerContact, setSellerContact] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setDescription(product.description);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n        setSellerAddress(product.sellerAddress);\n        setSellerContact(product.sellerContact);\n        setSellerDescription(product.sellerDescription);\n        setSellerImage(product.sellerImage);\n        setSellerName(product.sellerName);\n      }\n    }\n  }, [product, dispatch, history, productId, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description,\n      sellerName,\n      sellerImage,\n      sellerDescription,\n      sellerAddress,\n      sellerContact\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-dark my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Product image url\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Count In Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sellerName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Seller Name\",\n            value: sellerName,\n            onChange: e => setSellerName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sellerImage\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Seller Image url\",\n            value: sellerImage,\n            onChange: e => setSellerImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sellerDescription\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Seller Description\",\n            value: sellerDescription,\n            onChange: e => setSellerDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sellerAddress\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Seller Address\",\n            value: sellerAddress,\n            onChange: e => setSellerAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"sellerContact\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Seller Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Seller Contact Number\",\n            value: sellerContact,\n            onChange: e => setSellerContact(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreens, \"tycCNgNno0n61FoM+zVMUnTQKmU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreens;\nexport default ProductEditScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreens\");","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/screens/ProductEditScreens.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreens","match","history","productId","params","id","name","setName","price","setPrice","description","setDescription","brand","setBrand","category","setCategory","image","setImage","countInStock","setCountInStock","sellerName","setSellerName","sellerImage","setSellerImage","sellerDescription","setSellerDescription","sellerAddress","setSellerAddress","sellerContact","setSellerContact","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React ,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductEditScreens = ({match,history}) => {  \r\n     const productId=match.params.id\r\n     const [name,setName]= useState('')\r\n     const [price,setPrice]= useState(0)\r\n     const [description,setDescription]= useState('')\r\n     const [brand,setBrand]=useState('')\r\n     const [category,setCategory]=useState('')\r\n     const [image,setImage]= useState('')\r\n     const [countInStock,setCountInStock]=useState(0)\r\n     const [sellerName,setSellerName]=useState('')\r\n     const [sellerImage,setSellerImage]= useState('')\r\n     const [sellerDescription,setSellerDescription]=useState('')\r\n     const [sellerAddress,setSellerAddress]= useState('')\r\n     const [sellerContact,setSellerContact]= useState('')\r\n     const [uploading,setUploading]= useState(false)\r\n\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const productDetails = useSelector(state=> state.productDetails)\r\n     const {loading,error,product} = productDetails\r\n     \r\n     const productUpdate = useSelector(state=> state.productUpdate)\r\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate} = productUpdate\r\n\r\n     useEffect(()=>{\r\n\r\n            if(successUpdate){\r\n                dispatch({type:PRODUCT_UPDATE_RESET})\r\n                history.push('/admin/productlist')\r\n            } else {\r\n            if( ! product.name || product._id!==productId){\r\n                dispatch(listProductDetails(productId))\r\n            } else {  \r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setDescription(product.description)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setImage(product.image)\r\n                setSellerAddress(product.sellerAddress)\r\n                setSellerContact(product.sellerContact)\r\n                setSellerDescription(product.sellerDescription)\r\n                setSellerImage(product.sellerImage)\r\n                setSellerName(product.sellerName)\r\n\r\n            }\r\n        }   \r\n        \r\n     },[product,dispatch,history,productId,successUpdate])\r\n\r\n     const uploadFileHandler = async(e) => {\r\n         const file=e.target.files[0]\r\n         const formData= new FormData()\r\n         formData.append('image',file)\r\n         setUploading(true)\r\n\r\n         try{\r\n            const config ={\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n\r\n         } catch(error){\r\n             console.error(error)\r\n             setUploading(false)\r\n         }\r\n     }\r\n\r\n     const submitHandler= (e)=>{\r\n         e.preventDefault()\r\n         dispatch(updateProduct({\r\n             _id:productId,\r\n             name,\r\n             price,\r\n             image,\r\n             brand,\r\n             category,\r\n             countInStock,\r\n             description,\r\n             sellerName,\r\n             sellerImage,\r\n             sellerDescription,\r\n             sellerAddress,\r\n             sellerContact,\r\n         }))\r\n     }\r\n\r\n    return(\r\n            <> \r\n               <Link to='/admin/productlist' className='btn btn-dark my-3'>\r\n                   Go Back\r\n               </Link>\r\n               <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n           {loading ? <Loader /> : error? <Message variant='danger'>{error}</Message> :(\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control type='number' placeholder='Enter Price' value={price} onChange={(e)=> setPrice(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                <Form.Group controlId='image'>\r\n                <Form.Label>Image</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Product image url' value={image} onChange={(e)=> setImage(e.target.value)}>\r\n                    </Form.Control>\r\n                    <br />\r\n                    <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n                           {uploading && <Loader />}\r\n                </Form.Group>\r\n                 <br />\r\n                 <Form.Group controlId='brand'>\r\n                <Form.Label>Brand</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Brand' value={brand} onChange={(e)=> setBrand(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                 <Form.Group controlId='category'>\r\n                <Form.Label>Category</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Category' value={category} onChange={(e)=> setCategory(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br /> \r\n                 <Form.Group controlId='countInStock'>\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                    <Form.Control type='number' placeholder='Enter Count In Stock' value={countInStock} onChange={(e)=> setCountInStock(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />  \r\n                 <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Description' value={description} onChange={(e)=> setDescription(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />  \r\n                 <Form.Group controlId='sellerName'>\r\n                <Form.Label>Seller Name</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Seller Name' value={sellerName} onChange={(e)=> setSellerName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />  \r\n                 <Form.Group controlId='sellerImage'>\r\n                <Form.Label>Seller Image</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Seller Image url' value={sellerImage} onChange={(e)=> setSellerImage(e.target.value)}>\r\n                    </Form.Control>\r\n                    <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n                           {uploading && <Loader />}\r\n                </Form.Group>\r\n                 <br />  \r\n                 <Form.Group controlId='sellerDescription'>\r\n                <Form.Label>Seller Description</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Seller Description' value={sellerDescription} onChange={(e)=> setSellerDescription(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />  \r\n                 <Form.Group controlId='sellerAddress'>\r\n                <Form.Label>Seller Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Seller Address' value={sellerAddress} onChange={(e)=> setSellerAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />  \r\n                 <Form.Group controlId='sellerContact'>\r\n                <Form.Label>Seller Contact</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter Seller Contact Number' value={sellerContact} onChange={(e)=> setSellerContact(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />  \r\n                <Button  type='submit' variant='primary'>\r\n                  Update\r\n                </Button>\r\n            </Form>\r\n           )}\r\n           \r\n            \r\n        </FormContainer>\r\n            </>\r\n\r\n        \r\n    )   \r\n} \r\n\r\nexport default ProductEditScreens\r\n"]},"metadata":{},"sourceType":"module"}