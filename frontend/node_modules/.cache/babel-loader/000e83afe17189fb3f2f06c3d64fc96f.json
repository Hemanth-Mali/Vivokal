{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAwCC,0BAAxC,EAAmEC,wBAAnE,QAAkG,4BAAlG;AAEA,OAAO,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC,EAAX;AAAeC,EAAAA,eAAe,EAAC;AAA/B,CAAP,EAA0CC,MAA1C,KAAmD;AACzE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,YAAMU,IAAI,GAACF,MAAM,CAACG,OAAlB;AAEA,YAAMC,SAAS,GAAEP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAYL,IAAI,CAACK,OAA5C,CAAjB;;AAEA,UAAGH,SAAH,EACA;AACI,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAC/BA,CAAC,CAACC,OAAF,KAAYH,SAAS,CAACG,OAAtB,GAA+BL,IAA/B,GAAoCI,CADzB;AAFR,SAAP;AAMH,OARD,MAQK;AACD,eAAM,EACF,GAAGT,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBI,IAApB;AAFR,SAAN;AAIH;;AACD,SAAKT,gBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBH,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAaP,MAAM,CAACG,OAA9C;AAFR,OAAP;;AAIJ,SAAKT,0BAAL;AACK,aAAO,EACA,GAAGG,KADH;AAEAE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AAFxB,OAAP;;AAIL,SAAKR,wBAAL;AACI,aAAO,EACC,GAAGE,KADJ;AAECa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AAFvB,OAAP;;AAIJ;AACI,aAAON,KAAP;AApCZ;AAwCH,CAzCM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\nexport const cartReducer= (state={cartItems:[], shippingAddress:{}},action)=>{\r\n    switch (action.type){\r\n        case CART_ADD_ITEM:\r\n            const item=action.payload\r\n\r\n            const existItem= state.cartItems.find((x)=> x.product===item.product)\r\n\r\n            if(existItem)\r\n            {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                    x.product===existItem.product? item:x\r\n                    ),\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,item],\r\n                }\r\n            }\r\n            case CART_REMOVE_ITEM:\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.filter(x=>x.product!== action.payload),\r\n                }\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                 return {\r\n                        ...state,\r\n                        shippingAddress: action.payload,   \r\n                 }   \r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                        ...state,\r\n                        paymentMethod: action.payload,   \r\n                 }   \r\n            default: \r\n                return state \r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}