{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { sellerListReducer, sellerDetailsReducer } from './reducers/sellerReducers';\nimport { helperListReducer, helperDetailsReducer } from './reducers/helperReducers';\nimport { foodListReducer, foodDetailsReducer } from './reducers/foodReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  sellerList: sellerListReducer,\n  sellerDetails: sellerDetailsReducer,\n  helperList: helperListReducer,\n  helperDetails: helperDetailsReducer,\n  foodList: foodListReducer,\n  foodDetails: foodDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","productListReducer","productDetailsReducer","sellerListReducer","sellerDetailsReducer","helperListReducer","helperDetailsReducer","foodListReducer","foodDetailsReducer","cartReducer","composeWithDevTools","reducer","productList","productDetails","sellerList","sellerDetails","helperList","helperDetails","foodList","foodDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,QAAuD,4BAAvD;AACA,SAAQC,iBAAR,EAA0BC,oBAA1B,QAAqD,2BAArD;AACA,SAAQC,iBAAR,EAA0BC,oBAA1B,QAAqD,2BAArD;AACA,SAAQC,eAAR,EAAwBC,kBAAxB,QAAiD,yBAAjD;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,MAAMC,OAAO,GAAEb,eAAe,CAAC;AAC3Bc,EAAAA,WAAW,EAACX,kBADe;AAE3BY,EAAAA,cAAc,EAACX,qBAFY;AAG3BY,EAAAA,UAAU,EAACX,iBAHgB;AAI3BY,EAAAA,aAAa,EAACX,oBAJa;AAK3BY,EAAAA,UAAU,EAACX,iBALgB;AAM3BY,EAAAA,aAAa,EAACX,oBANa;AAO3BY,EAAAA,QAAQ,EAACX,eAPkB;AAQ3BY,EAAAA,WAAW,EAACX,kBARe;AAS3BY,EAAAA,IAAI,EAAEX;AATqB,CAAD,CAA9B;AAYA,MAAMY,oBAAoB,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnC,GAAiF,EAA7G;AAEA,MAAMG,YAAY,GAAC;AACfN,EAAAA,IAAI,EAAE;AAACO,IAAAA,SAAS,EAAEN;AAAZ;AADS,CAAnB;AAIA,MAAMO,UAAU,GAAC,CAAC5B,KAAD,CAAjB;AAEA,MAAM6B,KAAK,GAAEhC,WAAW,CAACc,OAAD,EAASe,YAAT,EAAsBhB,mBAAmB,CAACX,eAAe,CAAC,GAAG6B,UAAJ,CAAhB,CAAzC,CAAxB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers'\r\nimport {sellerListReducer,sellerDetailsReducer} from './reducers/sellerReducers'\r\nimport {helperListReducer,helperDetailsReducer} from './reducers/helperReducers'\r\nimport {foodListReducer,foodDetailsReducer} from './reducers/foodReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nconst reducer= combineReducers({ \r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    sellerList:sellerListReducer,\r\n    sellerDetails:sellerDetailsReducer,\r\n    helperList:helperListReducer,\r\n    helperDetails:helperDetailsReducer,\r\n    foodList:foodListReducer,\r\n    foodDetails:foodDetailsReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\nconst cartItemsFromStorage= localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst initialState={\r\n    cart: {cartItems: cartItemsFromStorage},\r\n}\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store= createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}