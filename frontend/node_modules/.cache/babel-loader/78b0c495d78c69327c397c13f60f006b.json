{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanth\\\\Desktop\\\\Vivokal\\\\frontend\\\\src\\\\screens\\\\ProfileScreens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreens = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ProfileScreens, \"xyTY3xwtq6NmDxKIp1r3SoWGKkc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreens;\nexport default ProfileScreens;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreens\");","map":{"version":3,"sources":["C:/Users/Hemanth/Desktop/Vivokal/frontend/src/screens/ProfileScreens.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","ProfileScreens","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","submitHandler","e","preventDefault","id","_id","target","value"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\n\r\nconst ProfileScreens = ({location,history}) => {  \r\n\r\n     const [name,setName]= useState('')\r\n     const [email,setEmail]= useState('')\r\n     const [password,setPassword]= useState('')\r\n     const [confirmPassword,setConfirmPassword]= useState('')\r\n     const [message,setMessage]= useState('')\r\n\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails = useSelector(state=> state.userDetails)\r\n     const {loading,error,user} = userDetails\r\n\r\n     const userLogin = useSelector(state=> state.userLogin)\r\n     const {userInfo} = userLogin\r\n\r\n     const userUpdateProfile = useSelector(state=> state.userUpdateProfile)\r\n     const {success} = userUpdateProfile\r\n\r\n\r\n     useEffect(()=>{\r\n         if(!userInfo){\r\n             history.push('/login')\r\n         } else{\r\n             if(!user.name){\r\n                 dispatch(getUserDetails('profile'))\r\n             } else{\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n             }\r\n         }\r\n     },[dispatch,history,userInfo,user])\r\n\r\n     const submitHandler= (e)=>{\r\n         e.preventDefault()\r\n         if(password!==confirmPassword){\r\n             setMessage('Passwords do not match')\r\n         } else{\r\n             dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n         }  \r\n     }\r\n\r\n    return(\r\n       <Row>\r\n           <Col md={3} className='align-items-center'>\r\n           <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e)=> setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email Address' value={email} onChange={(e)=> setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e)=> setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <br />\r\n                 <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e)=> setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br /> \r\n                <Button  type='submit' variant='primary'>\r\n                  Update \r\n                </Button>\r\n            </Form>\r\n           </Col>\r\n           <Col md={9}>\r\n               <h2>My Orders</h2>\r\n           </Col>\r\n       </Row>\r\n    )   \r\n} \r\n\r\nexport default ProfileScreens\r\n"]},"metadata":{},"sourceType":"module"}